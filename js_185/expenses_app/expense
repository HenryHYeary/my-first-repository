#!/usr/bin/env node

const { Client } = require('pg');
let client = new Client({ 
  host: "/var/run/postgresql",
  port: 5432,
  user: "henmo",
  database: "expenses" 
});

const { argv } = require('node:process');

async function listExpenses() {
  await client.connect().catch(error => logAndExit(error));

  let res = await client.query(`SELECT * FROM expenses ORDER BY created_on`)
                          .catch(error => logAndExit(error));

  res.rows.forEach(row => {
    let columns = [
      String(row.id).padStart(3),
      row.created_on.toDateString().padStart(10),
      row.amount.padStart(12),
      row.memo
    ];

    console.log(columns.join(' | '));
  });
  
  await client.end().catch(error => logAndExit(error));
};

async function addExpenses(amount, memo) {
  await client.connect().catch(error => logAndExit(error));
  let date = new Date();
  date = date.toLocaleDateString();
  
  await client.query(`INSERT INTO expenses (amount, memo, created_on)
  VALUES (${amount}, '${memo}' , '${date}')`).catch(error => logAndExit(error));

  await client.end().catch(error => logAndExit(error));
};

function help() {
  console.log(
`An expense recording system
  
Commands:
  
add AMOUNT MEMO [DATE] - record a new expense
clear - delete all expenses
list - list all expenses
delete NUMBER - remove expense with id NUMBER
search QUERY - list expenses with a matching memo field`);
};

function logAndExit(err) {
  console.log(err);
  process.exit(1);
}

let command = argv[2];

if (command === 'list') {
  listExpenses();
} else if (command === 'add') {
  let amount = argv[3];
  let memo = argv[4];
  if (amount && memo) {
    addExpenses(amount, memo);
  } else {
    console.log('You must provide an amount and memo.');
  }
} else {
  help();
}